db:
  type: derby

server:
#  address: localhost
  port: 9002
  # http端口
  custom:
    http-port: 8041
  ssl:
    key-store: ${esbconsole.home}/conf/keystore/keystore.jks
    key-store-password: password
    key-store-type: jks
    enabled: true
    key-alias: mykey
#  forward-headers-strategy: framework

# swagger-ui config
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    url:
    # 是否开启swagger-ui
    enabled: false
#    operations-sorter: alpha
#  writer-with-order-by-keys: true
#  group-configs:
#    - group: admin
#    - display-name: esbconsole
#    - packages-to-scan: org.talend.esbconsole.server.web.api.controller

# datasource druid config
spring:
  # 允许静态资源访问
  mvc:
    static-path-pattern: /**
  web:
    resources:
      static-locations: classpath:/static/,classpath:/public/,classpath:/resources/,classpath:/META-INF/resources/,file:${esbconsole.home}/web/
  application:
    name: ESB管理监控平台
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  datasource:
    # derby数据库连接配置示例
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:derby://localhost:1527/db;create=true
    username: test
    password: test
    driver-class-name: org.apache.derby.jdbc.ClientDriver
    # oracle（11g）数据库连接配置示例
#    type: com.alibaba.druid.pool.DruidDataSource
#    url: jdbc:oracle:thin:@192.168.1.1:1521:ORCL
#    username: root
#    password: 123456
#    driver-class-name: oracle.jdbc.driver.OracleDriver
    # MySQL数据库连接配置示例
#    type: com.alibaba.druid.pool.DruidDataSource
#    url: jdbc:mysql://192.168.1.1:3306/esb?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
#    username: root
#    password: 123456
#    driver-class-name: com.mysql.cj.jdbc.Driver

# mybatis config
mybatis:
  # MyBatis中xxxxmapper.xml文件位置
  mapper-locations: classpath:org/talend/esbconsole/server/domain/repository/${db.type}/*Mapper.xml
  # 设置自定义的Typehandler所在的包，启动的时候会自动扫描配置到Mybatis中
  # 注意：使用derby、oracle数据库时一定要开启此配置
  type-handlers-package: org.talend.esbconsole.server.domain.repository.handler

# guava config
guava:
  cache:
    config:
      # 并发级别为,并发级别是指可以同事写缓存的线程数
      concurrency-level: 8
      #缓存最大容量,超过之后会按照LRU最近最少使用算法来移除缓存项
      max-imum-size: 1000
      #设置写缓存后,多长时间过期  时间单位为毫秒
      expire-after-write: 10000
      #设置创建条目、最近一次替换其值或最后一次访问之后,多长时间过期  时间单位为分钟
      expire-after-access: 30
      #设置缓存容量的初始容量
      initial-capacity: 10
      #如果缓存过期，恰好有多个线程读取同一个key的值，那么guava只允许一个线程去加载数据，其余线程
      #阻塞。
      #这虽然可以防止大量请求穿透缓存，但是效率低下。
      #使用refreshAfterWrite可以做到：只阻塞加载数据的线程，其余线程返回旧数据。
      #时间单位为 毫秒
      refresh-after-write: 1000

# page config
pagehelper:
  helper-dialect: ${db.type}
  reasonable: true
  support-methods-arguments: true

# httpclient config
httpclient:
  #最大连接数
  max-total: 10
  #并发数
  default-max-per-route: 20
  #创建连接的最长时间
  connect-timeout: 1000
  #从连接池中获取到连接的最长时间
  connection-request-timeout: 500
  #数据传输的最长时间
  socket-timeout: 10000
  #提交请求前测试连接是否可用
  stale-connection-check-enabled: true
  #可用空闲连接过期时间,重用空闲连接时会先检查是否空闲时间超过这个时间，如果超过，释放socket重新建立
  validate-after-inactivity: 3000000

# 服务代码包缓存目录
service:
  dir: ${esb.home}/services
  delete-file: false

# server访问控制uri
sam:
  ac:
    url: http://localhost:8040/services/sam/ac

# karafconsole ssh连接参数配置
karaf:
  name: karaf-trun
  jmx:
    rmi-registry-host: 127.0.0.1
    rmi-registry-port: 1099
    rmi-server-host: 127.0.0.1
    rmi-server-port: 44444
    username: tadmin
    password: tadmin
  console:
    ssh:
      host: localhost
      port: 8101
      username: karaf
      password: karaf
      charset: GBK

# 数据初始化脚本存放位置
datasource:
  script:
    dir: ${esbconsole.home}/conf/db/${db.type}
    name: esbconsole
    type: sql